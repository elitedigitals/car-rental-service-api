// // import axios from 'axios';
// import Car from "../models/car.schema.js";

// export const rentCar = async (req, res) => {
//     const { carId } = req.params;
//   const userId = req.user.id;
//   const { startDate, endDate, totalPrice } = req.body;

//   try {
//     // Find the car by ID
//     const car = await Car.findById(carId);
//     if (!car) {
//       return res.status(404).json({ message: "Car not found" });
//     }

//     // Check if the car is already rented
//     if (car.isRented) {
//       return res.status(400).json({ message: "Car is already rented" });
//     }

//     // Update the car's rental status
//     car.isRented = true;
//     car.rentedBy = userId;
//     car.startDate = startDate;
//     car.endDate = endDate;
//     car.totalPrice = totalPrice;
//     car.status = "pending"; // Set initial status to pending
//     await car.save();

//     return res.status(200).json({ message: "Car rented successfully", car });
//   } catch (error) {
//     console.error("Error renting car:", error);
//     return res.status(500).json({ message: "Internal Server Error" });
//   }
// };


// export const verifyPayment = async (req, res) => {
//     const { reference } = req.query;

//     try {
//         const response = await axios.get(
//             `https://api.paystack.co/transaction/verify/${reference}`,
//             {
//                 headers: {
//                     Authorization: `Bearer ${process.env.PAYSTACK_SECRET_KEY}`,
//                     "Content-Type": "application/json"
//                 }
//             }
//         );

//         const paymentData = response.data.data;

//         if (paymentData.status === "success") {
//             // Update car status to rented
//             const car = await Car.findOneAndUpdate(
//                 { _id: paymentData.metadata.carId, isRented: true },
//                 { status: 'rented', isAvailable: false },
//                 { new: true }
//             );

//             if (!car) {
//                 return res.status(404).json({ message: "Car not found or already rented" });
//             }

//             return res.status(200).json({
//                 message: "Payment verified successfully",
//                 car
//             });
//         } else {
//             return res.status(400).json({ message: "Payment verification failed", paymentData });
//         }

//     } catch (error) {
//         console.error("Verification Error:", error?.response?.data || error.message);
//         return res.status(500).json({
//             message: "Error verifying payment",
//             error: error?.response?.data || error.message
//         });
//     }
// }